"""
Django settings for EstateByTheOwner project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
import firebase_admin
from firebase_admin import credentials
from firebase_admin import firestore


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent

DB_Dir=Path(__file__).resolve(strict=True).parent.parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'bb$tkk$2+l^$&-5q$!tfx@-j(#7w-zt0)njm=(1-4cds)q@qgh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition


config = {
  "type": "service_account",
  "project_id": "estate-by-the-owner",
  "private_key_id": "5289190a7406ab1f711ae391c56da40734da1285",
  "private_key": "-----BEGIN PRIVATE KEY-----\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCws9b1nJmnO5bP\nkgbU3LDJ01AAlenjd7L6q7JZ7jXU8f4QtLZjCYO1IN2EYLW+kYsJc8fPaVLQIg0/\nkw7THNeXQkjIniTc7xe9mLrRUim2t3hoGjCB2Xs7uCHybYemYhnhksu3buIJn+nA\nGQ5n7uEpj64ieDY8wHvK613ZLZvovz5Y4GaJbE/SAlJ5z7SiZdQXHg9XhcDxEsW8\nwo1FbsZkzgTK4PHnEdOFAG2ZxyDBF6zvhox8yKvZHlFtNU5ArbMx+NL3Q0xlsZ3k\n2Kkfe0lZro47PteG8EQ9BcKC6kGCWJgsnyvVifZJ3vyW3L/ooe1G6hDsr1oc8LEl\nARyBhu/jAgMBAAECggEAE7CLwg/nyeFd9gCI5QHia9rcDfSmfJjt8fiyhaAsPMTq\nUTo8czSwNGgBHFXFFVhqbGyLqz+f4V6p/ezeY1p8u3drXM93vsFK8pl+LQJBcQFo\nrVDzGW+pHQfGNe6hMEJmLTiKSAUBsvOFZx5jozkpuykuIjElpLIIw/JjdrvE+l4v\n36jj+B2zTS2j2vkm7HmSOGLAybpmY0GjN6m9edrwyoD6XNtw/6/lqJfKMlMt1BJa\noN29NcDCxfi5bqtxpcEWEbAY+EtopIFDGPxLl25s8ny6rOEQ7LP+rBxj9yEtgbIT\nfJCT8+Y4coV3H2FswKIomq8TLDyZ6DI8m6O5IpM6wQKBgQDz+FUVQ1efVf8j2eRG\nQ6xoNfB5jHVGILrP3suxN5Q3jfBBLSEfJtqPVqJT99dQvOa1FRX9JJmGG3jhPceB\nx4EEuReJsidgJMy4QqoD7LawZwJc3nJpk/no8S8ww0WX90qexpW23uQDP6sQSm9c\nna1/iOLbt76S4q9dB529zHd1SQKBgQC5amE3h+1OpfPoid6OwE1PBMKxujgoocnr\n6ZG4E+pba6CYvLjXLM90Tp1iDbhHaz+kxnfrQUI++oVBL2XvZL8UjPMMTlm6bkJw\ng/ZNYbf20YVzWdzpnDnHZ36xmJMQvWjAGFntNgvVGYN3FuPHJxiQETz9AGljXGry\nUFL7xQh3ywKBgQC4yLB4yGbHcjUrDE/PwFYHIEOhbHcuxH96Dj+tXHFQmpsMYogh\ntiX4Rx/wBVn59vmu0eezslLttkUaJNbFPzxDPYXMbzlPos/ECAoJqvK8LWkmuf1i\nZgf1HSgnAN/nOBA2riabObrtkv2X+yjZtzu/ywg4brVTP4qfJbOeHA2msQKBgBJU\niP3jazt+Pom7r4vvSPVJ5DGL1md17y9qbOSE24NkNYFEDwX+wRefegGql5A/8w/I\nKyzPy8vMGoZiODKdhCJ0+MY7rLU4l0rmUOA/i99TwVyxApz5u+CRw72s9sUN5KAx\nCBriX/MWTZ/lXGlg3RXJDn14n/KZvVztQfbv+LFXAoGBAOiRcbbOJ2a2Jlhi0W7G\nmrr3Do9jZzwOHhrJmSEfsX1hTx7AsW5ck77J3cs61rH7fA7mA1P7+OZtswXBJsyr\nQ9YEiWgovFgP2JpI7TrKK+Lhd37UFdnALhDD8xVwQHnhw6WnbwOfoznUhZ//aeTO\n6fHZZUjQTHUQW0GOliNvr2iI\n-----END PRIVATE KEY-----\n",
  "client_email": "estate-by-the-owner@appspot.gserviceaccount.com",
  "client_id": "115824635908434911214",
  "auth_uri": "https://accounts.google.com/o/oauth2/auth",
  "token_uri": "https://oauth2.googleapis.com/token",
  "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
  "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/estate-by-the-owner%40appspot.gserviceaccount.com"
}


cred = credentials.Certificate(config)
firebase_admin.initialize_app(cred)

db = firestore.client()



INSTALLED_APPS = [

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'User.apps.LoginConfig',
    'Property.apps.AppfeatureConfig',
    'Appointment.apps.AppfeatureConfig',
    'storages',
]

MIDDLEWARE = [
    'EstateByTheOwner.middleware.ProcessViewNoneMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'EstateByTheOwner.urls'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ]
}

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')]
        ,
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

FILE_UPLOAD_HANDLERS=[
    'django.core.files.uploadhandler.MemoryFileUploadHandler',
    'django.core.files.uploadhandler.TemporaryFileUploadHandler',
]

WSGI_APPLICATION = 'EstateByTheOwner.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default':{
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'estate_owner',
        'USER':'estate_owner',
        'PASSWORD': 'estate_owner',
        'HOST': 'estate-owner2.chpwl56quy9u.us-east-1.rds.amazonaws.com',
        'PORT': '5432',
    }
}

PRIVATE_KEY = open(os.path.join(BASE_DIR,"keys")+"/private.jwks", "r").read()

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True
DATA_UPLOAD_MAX_MEMORY_SIZE = 429916160
MAX_UPLOAD_SIZE = 429916160

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'

USE_S3 =  True

if USE_S3:
    # aws settings
    # AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID')
    # AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY')
    # AWS_STORAGE_BUCKET_NAME = os.getenv('AWS_STORAGE_BUCKET_NAME')
    AWS_ACCESS_KEY_ID = 'AKIAQTDOLD6VB2EDLKE7'
    AWS_SECRET_ACCESS_KEY = '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'
    AWS_STORAGE_BUCKET_NAME = 'django-static-058'
    AWS_DEFAULT_ACL = 'public-read'
    AWS_S3_CUSTOM_DOMAIN = f'{AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com'
    AWS_S3_OBJECT_PARAMETERS = {'CacheControl': 'max-age=86400'}
    # s3 static settings
    AWS_LOCATION = 'static'
    STATIC_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{AWS_LOCATION}/'
    STATICFILES_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
    PUBLIC_MEDIA_LOCATION = 'media'
    MEDIA_URL = f'https://{AWS_S3_CUSTOM_DOMAIN}/{PUBLIC_MEDIA_LOCATION}/'
    DEFAULT_FILE_STORAGE = 'EstateByTheOwner.storage_backends.PublicMediaStorage'
    # s3 private media settings
    PRIVATE_MEDIA_LOCATION = 'private'
    PRIVATE_FILE_STORAGE = 'EstateByTheOwner.storage_backends.PrivateMediaStorage'

else:
    STATIC_URL = '/staticfiles/'
    STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

    MEDIA_URL = '/mediafiles/'
    MEDIA_ROOT = os.path.join(BASE_DIR, 'mediafiles')

STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),)
